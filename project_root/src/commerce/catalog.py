from __future__ import annotations
from pathlib import Path
from typing import Dict, List, Tuple, Optional
import random

# ===== ABSOLUTE PATHS (÷Ñ’∏ ’Ø’°’º’∏÷Ç÷Å’æ’°’Æ÷Ñ’´ ’∞’°’¥’°’±’°’µ’∂) =====
# project_root/      -> C:\StarLegenBot\project_root
# ’°÷Ä’ø’°÷Ñ’´’∂ media/     -> C:\StarLegenBot\media
PROJECT_ROOT      = Path(__file__).resolve().parents[2]
MEDIA_DIR         = (PROJECT_ROOT.parent / "media").resolve()   # << ‘±’ê’è‘±’î‘ª’Ü media
PRODUCT_IMG_DIR   = (MEDIA_DIR / "PRODUCT").resolve()           # << ’î’∏ ’∫’°’∂’°’Ø’®’ù PRODUCT (’¥’•’Æ’°’ø’°’º)

# ---------- Data: Categories / Subcategories ----------
_CATEGORIES = {
    "hy": [
        ("carpets", "üß∂ ‘≥’∏÷Ä’£’•÷Ä"),
        ("auto",    "üöó ‘±’æ’ø’∏"),
        ("women",   "üëó ‘ø’°’∂’°÷Å’´"),
        ("men",     "üëï ’è’≤’°’¥’°÷Ä’§’∏÷Ç"),
        ("kids",    "üë∂ ’Ñ’°’∂’Ø’°’Ø’°’∂"),
    ],
    "ru": [
        ("carpets", "üß∂ –ö–æ–≤—Ä—ã"),
        ("auto",    "üöó –ê–≤—Ç–æ"),
        ("women",   "üëó –ñ–µ–Ω—Å–∫–∏–µ"),
        ("men",     "üëï –ú—É–∂—Å–∫–∏–µ"),
        ("kids",    "üë∂ –î–µ—Ç—Å–∫–∏–µ"),
    ],
    "en": [
        ("carpets", "üß∂ Carpets"),
        ("auto",    "üöó Auto"),
        ("women",   "üëó Women"),
        ("men",     "üëï Men"),
        ("kids",    "üë∂ Kids"),
    ],
}

_SUBCATS = {
    "carpets": ["home"],
    "auto":    ["vacuum"],
    "women":   ["tshirt", "leggings", "tights", "socks", "underwear", "nightwear"],
    "men":     ["tshirt", "underwear"],
    "kids":    ["tshirt", "socks"],
}

_SUBCAT_TITLES = {
    "hy": {
        ("carpets","home"):      "üè† ’è’°’∂ ’∞’°’¥’°÷Ä",
        ("auto","vacuum"):       "üßπ ’ì’∏’∑’•’Ø’∏÷Ç’¨",
        ("women","tshirt"):      "üëö ’á’°’∫’´’Ø’∂’•÷Ä",
        ("women","leggings"):    "ü©≥ ‘≤’°’∂’ø’°’™’∂’•÷Ä (’¨’•’£’´’∂’Ω)",
        ("women","tights"):      "üß¶ ‘∂’∏÷Ç’£’°’£’∏÷Ç’¨’∫’°’∂’•÷Ä",
        ("women","socks"):       "üß¶ ‘≥’∏÷Ç’¨’∫’°’∂’•÷Ä",
        ("women","underwear"):   "ü©≤ ’Ü’•÷Ä÷Ñ’∂’°’¶’£’•’Ω’ø",
        ("women","nightwear"):   "üåô ‘≥’´’∑’•÷Ä’°’¶’£’•’Ω’ø",
        ("men","tshirt"):        "üëï ’á’°’∫’´’Ø’∂’•÷Ä",
        ("men","underwear"):     "ü©≤ ’Ü’•÷Ä÷Ñ’∂’°’¶’£’•’Ω’ø",
        ("kids","tshirt"):       "üëï ’á’°’∫’´’Ø’∂’•÷Ä",
        ("kids","socks"):        "üß¶ ‘≥’∏÷Ç’¨’∫’°’∂’•÷Ä",
    },
    "ru": {
        ("carpets","home"):      "üè† –î–ª—è –¥–æ–º–∞",
        ("auto","vacuum"):       "üßπ –ü—ã–ª–µ—Å–æ—Å",
        ("women","tshirt"):      "üëö –§—É—Ç–±–æ–ª–∫–∏",
        ("women","leggings"):    "ü©≥ –õ–µ–≥–≥–∏–Ω—Å—ã",
        ("women","tights"):      "üß¶ –ö–æ–ª–≥–æ—Ç–∫–∏",
        ("women","socks"):       "üß¶ –ù–æ—Å–∫–∏",
        ("women","underwear"):   "ü©≤ –ë–µ–ª—å—ë",
        ("women","nightwear"):   "üåô –ù–æ—á–Ω—É—à–∫–∏",
        ("men","tshirt"):        "üëï –§—É—Ç–±–æ–ª–∫–∏",
        ("men","underwear"):     "ü©≤ –¢—Ä—É—Å—ã",
        ("kids","tshirt"):       "üëï –§—É—Ç–±–æ–ª–∫–∏",
        ("kids","socks"):        "üß¶ –ù–æ—Å–∫–∏",
    },
    "en": {
        ("carpets","home"):      "üè† For Home",
        ("auto","vacuum"):       "üßπ Vacuum",
        ("women","tshirt"):      "üëö T-Shirts",
        ("women","leggings"):    "ü©≥ Leggings",
        ("women","tights"):      "üß¶ Tights",
        ("women","socks"):       "üß¶ Socks",
        ("women","underwear"):   "ü©≤ Underwear",
        ("women","nightwear"):   "üåô Nightwear",
        ("men","tshirt"):        "üëï T-Shirts",
        ("men","underwear"):     "ü©≤ Underwear",
        ("kids","tshirt"):       "üëï T-Shirts",
        ("kids","socks"):        "üß¶ Socks",
    },
}

# Map (cat_id, sub_id) -> list of product IDs
_PROD_INDEX = {
    ("carpets","home"): ["P001","P013","P014","P015","P016","P017","P018","P019","P020","P021"],
    ("auto","vacuum"):  ["P002"],
    ("women","tshirt"): ["P003"],
    ("women","leggings"): ["P005"],
    ("women","tights"): ["P006"],
    ("women","socks"): ["P007"],
    ("women","underwear"): ["P009"],
    ("women","nightwear"): ["P010"],
    ("men","tshirt"): ["P004"],
    ("men","underwear"): ["P008"],
    ("kids","tshirt"): ["P011"],
    ("kids","socks"): ["P012"],
}

# ---------- Products ----------
PRODUCTS: Dict[str, Dict] = {
    # --- Rugs P001 + P013..P021 (all 40√ó60, 3250 ‚Üí 1690) ---
    "P001": {
        "code": "BA100810",
        "title": {"hy":"‘≥’∏÷Ä’£ ‚Ññ1","ru":"–ö–æ–≤—ë—Ä ‚Ññ1","en":"Carpet #1"},
        "short": {"hy":"’â’Ω’°’∞’∏’≤ ’∞’´’¥÷Ñ ‚Ä¢ ’Ä’•’∑’ø ’¥’°÷Ñ÷Ä’∏÷Ç’¥ ‚Ä¢ 40√ó60 ’Ω’¥",
                  "ru":"–ê–Ω—Ç–∏-—Å–∫–æ–ª—å–∑. –æ—Å–Ω–æ–≤–∞ ‚Ä¢ –õ—ë–≥–∫–∏–π —É—Ö–æ–¥ ‚Ä¢ 40√ó60 —Å–º",
                  "en":"Anti-slip base ‚Ä¢ Easy care ‚Ä¢ 40√ó60 cm"},
        "long": {
            "hy":"‚Ä¢ ‘≤’°÷Ä’±÷Ä ’∞’µ’∏÷Ç’Ω’æ’°’Æ÷Ñ‚Ä¶\n‚Ä¢ ’â’°÷É’ù 40√ó60 ’Ω’¥ ‚Ä¢ ‘±’º’°÷Ñ’∏÷Ç’¥’ù 14 ÷Ö÷Ä\n‚Ä¢ ‘ø’∏’§’ù BA100810",
            "ru":"‚Ä¢ –í—ã—Å–æ–∫–∞—è –ø–ª–æ—Ç–Ω–æ—Å—Ç—å‚Ä¶\n‚Ä¢ 40√ó60 —Å–º ‚Ä¢ –î–æ—Å—Ç–∞–≤–∫–∞ 14 –¥–Ω–µ–π\n‚Ä¢ –ö–æ–¥: BA100810",
            "en":"‚Ä¢ High pile density‚Ä¶\n‚Ä¢ Size 40√ó60 cm ‚Ä¢ Delivery 14d\n‚Ä¢ Code: BA100810",
        },
        "price_new": 1690, "price_old": 3250,
        "best_seller": True, "stock": 12,
        "badges": ["Premium","Eco"],
        "variants": ["40√ó60"],
        "video": None,
        "images": [
            str(PRODUCT_IMG_DIR/"rugs"/"BA100810.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"advantages.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"interior.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"layers.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"absorb.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"care.jpg"),
        ],
    },

    "P013": {
        "code":"BA100811",
        "title":{"hy":"‘≥’∏÷Ä’£ ‚Ññ2","ru":"–ö–æ–≤—ë—Ä ‚Ññ2","en":"Carpet #2"},
        "short":{"hy":"’ì’°÷É’∏÷Ç’Ø ÷Ñ’°’µ’¨÷Ñ ‚Ä¢ ‘±÷Ä’°’£ ’¥’°÷Ñ÷Ä’∏÷Ç’¥ ‚Ä¢ 40√ó60",
                 "ru":"–ú—è–≥–∫–∏–π —à–∞–≥ ‚Ä¢ –ë—ã—Å—Ç—Ä—ã–π —É—Ö–æ–¥ ‚Ä¢ 40√ó60",
                 "en":"Soft step ‚Ä¢ Quick clean ‚Ä¢ 40√ó60"},
        "long":{
            "hy":"‚Ä¢ ’Ñ’´’Ø÷Ä’∏÷Ü’´’¢÷Ä’°‚Ä¶\n‚Ä¢ ‘ø’∏’§’ù BA100811",
            "ru":"‚Ä¢ –ú–∏–∫—Ä–æ—Ñ–∏–±—Ä–∞‚Ä¶\n‚Ä¢ –ö–æ–¥: BA100811",
            "en":"‚Ä¢ Microfiber‚Ä¶\n‚Ä¢ Code: BA100811",
        },
        "price_new": 1690, "price_old": 3250,
        "best_seller": True, "stock": 11,
        "badges":["Eco"], "variants":["40√ó60"], "video": None,
        "images":[
            str(PRODUCT_IMG_DIR/"rugs"/"BA100811.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"advantages.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"interior.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"layers.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"absorb.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"care.jpg"),
        ],
    },

    "P014": {
        "code":"BA100812",
        "title":{"hy":"‘≥’∏÷Ä’£ ‚Ññ3","ru":"–ö–æ–≤—ë—Ä ‚Ññ3","en":"Carpet #3"},
        "short":{"hy":"‘¥’´’¥’°÷Å’Ø’∏÷Ç’∂ ’¥’°’∂÷Ä’°’©’•’¨ ‚Ä¢ 40√ó60",
                 "ru":"–ü—Ä–æ—á–Ω–æ–µ –≤–æ–ª–æ–∫–Ω–æ ‚Ä¢ 40√ó60",
                 "en":"Resilient fiber ‚Ä¢ 40√ó60"},
        "long":{
            "hy":"‚Ä¢ ‘Ω’´’ø, ’ß’¨’°’Ω’ø’´’Ø ’¥’°’∂÷Ä’°’©’•’¨‚Ä¶\n‚Ä¢ ‘ø’∏’§’ù BA100812",
            "ru":"‚Ä¢ –ü–ª–æ—Ç–Ω–æ–µ, —É–ø—Ä—É–≥–æ–µ –≤–æ–ª–æ–∫–Ω–æ‚Ä¶\n‚Ä¢ –ö–æ–¥: BA100812",
            "en":"‚Ä¢ Dense, resilient fiber‚Ä¶\n‚Ä¢ Code: BA100812",
        },
        "price_new": 1690, "price_old": 3250,
        "best_seller": False, "stock": 13,
        "badges":["Premium"], "variants":["40√ó60"], "video": None,
        "images":[
            str(PRODUCT_IMG_DIR/"rugs"/"BA100812.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"advantages.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"interior.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"layers.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"absorb.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"care.jpg"),
        ],
    },

    "P015": {
        "code":"BA100813",
        "title":{"hy":"‘≥’∏÷Ä’£ ‚Ññ4","ru":"–ö–æ–≤—ë—Ä ‚Ññ4","en":"Carpet #4"},
        "short":{"hy":"’Ä’°’Ø’°’Ω’°’∞’∏’≤ ’∞’´’¥÷Ñ ‚Ä¢ 40√ó60","ru":"–ê–Ω—Ç–∏—Å–∫–æ–ª—å–∑—è—â–∞—è –æ—Å–Ω–æ–≤–∞ ‚Ä¢ 40√ó60","en":"Anti-slip base ‚Ä¢ 40√ó60"},
        "long":{
            "hy":"‚Ä¢ ’Ñ’°’∂÷Ä’°’©’•’¨’•÷Ä’´ ’≠’´’ø ’∞’µ’∏÷Ç’Ω÷Ñ‚Ä¶\n‚Ä¢ ‘ø’∏’§’ù BA100813",
            "ru":"‚Ä¢ –ü–ª–æ—Ç–Ω–æ–µ –ø–µ—Ä–µ–ø–ª–µ—Ç–µ–Ω–∏–µ‚Ä¶\n‚Ä¢ –ö–æ–¥: BA100813",
            "en":"‚Ä¢ Dense weave‚Ä¶\n‚Ä¢ Code: BA100813",
        },
        "price_new": 1690, "price_old": 3250,
        "best_seller": False, "stock": 15,
        "badges":["Eco"], "variants":["40√ó60"], "video": None,
        "images":[
            str(PRODUCT_IMG_DIR/"rugs"/"BA100813.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"advantages.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"interior.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"layers.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"absorb.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"care.jpg"),
        ],
    },

    "P016": {
        "code":"BA100814",
        "title":{"hy":"‘≥’∏÷Ä’£ ‚Ññ5","ru":"–ö–æ–≤—ë—Ä ‚Ññ5","en":"Carpet #5"},
        "short":{"hy":"’ì’∏’∑’´’∂ ’π’´ ’Ø’∫’π’∏÷Ç’¥ ‚Ä¢ 40√ó60","ru":"–ú–µ–Ω—å—à–µ –ø—ã–ª–∏ ‚Ä¢ 40√ó60","en":"Low dust ‚Ä¢ 40√ó60"},
        "long":{
            "hy":"‚Ä¢ ’Ñ’´’Ø÷Ä’∏÷Ü’´’¢÷Ä’°‚Ä¶\n‚Ä¢ ‘ø’∏’§’ù BA100814",
            "ru":"‚Ä¢ –ú–∏–∫—Ä–æ—Ñ–∏–±—Ä–∞‚Ä¶\n‚Ä¢ –ö–æ–¥: BA100814",
            "en":"‚Ä¢ Microfiber‚Ä¶\n‚Ä¢ Code: BA100814",
        },
        "price_new": 1690, "price_old": 3250,
        "best_seller": False, "stock": 17, "badges":[], "variants":["40√ó60"], "video": None,
        "images":[
            str(PRODUCT_IMG_DIR/"rugs"/"BA100814.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"advantages.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"interior.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"layers.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"absorb.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"care.jpg"),
        ],
    },

    "P017": {
        "code":"BA100815",
        "title":{"hy":"‘≥’∏÷Ä’£ ‚Ññ6","ru":"–ö–æ–≤—ë—Ä ‚Ññ6","en":"Carpet #6"},
        "short":{"hy":"’Ä’•’∑’ø ’¥’°÷Ñ÷Ä’∏÷Ç’¥ ‚Ä¢ 40√ó60","ru":"–õ—ë–≥–∫–∏–π —É—Ö–æ–¥ ‚Ä¢ 40√ó60","en":"Easy care ‚Ä¢ 40√ó60"},
        "long":{
            "hy":"‚Ä¢ ‘≤’°’¶’¥’°’∑’•÷Ä’ø ’∞’´’¥÷Ñ‚Ä¶\n‚Ä¢ ‘ø’∏’§’ù BA100815",
            "ru":"‚Ä¢ –ú–Ω–æ–≥–æ—Å–ª–æ–π–Ω–∞—è –æ—Å–Ω–æ–≤–∞‚Ä¶\n‚Ä¢ –ö–æ–¥: BA100815",
            "en":"‚Ä¢ Multi-layer base‚Ä¶\n‚Ä¢ Code: BA100815",
        },
        "price_new": 1690, "price_old": 3250,
        "best_seller": False, "stock": 16, "badges":["Premium"], "variants":["40√ó60"], "video": None,
        "images":[
            str(PRODUCT_IMG_DIR/"rugs"/"BA100815.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"advantages.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"interior.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"layers.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"absorb.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"care.jpg"),
        ],
    },

    "P018": {
        "code":"BA100816",
        "title":{"hy":"‘≥’∏÷Ä’£ ‚Ññ7","ru":"–ö–æ–≤—ë—Ä ‚Ññ7","en":"Carpet #7"},
        "short":{"hy":"’á’∂’π’∏’≤ ’Ø’°’º’∏÷Ç÷Å’æ’°’Æ÷Ñ ‚Ä¢ 40√ó60","ru":"–î—ã—à–∞—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ ‚Ä¢ 40√ó60","en":"Breathable ‚Ä¢ 40√ó60"},
        "long":{
            "hy":"‚Ä¢ ’á’∂’π’∏’≤ ’∞’´’¥÷Ñ‚Ä¶\n‚Ä¢ ‘ø’∏’§’ù BA100816",
            "ru":"‚Ä¢ –î—ã—à–∞—â–∞—è –æ—Å–Ω–æ–≤–∞‚Ä¶\n‚Ä¢ –ö–æ–¥: BA100816",
            "en":"‚Ä¢ Breathable base‚Ä¶\n‚Ä¢ Code: BA100816",
        },
        "price_new": 1690, "price_old": 3250,
        "best_seller": False, "stock": 18, "badges":[], "variants":["40√ó60"], "video": None,
        "images":[
            str(PRODUCT_IMG_DIR/"rugs"/"BA100816.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"advantages.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"interior.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"layers.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"absorb.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"care.jpg"),
        ],
    },

    "P019": {
        "code":"BA100817",
        "title":{"hy":"‘≥’∏÷Ä’£ ‚Ññ8","ru":"–ö–æ–≤—ë—Ä ‚Ññ8","en":"Carpet #8"},
        "short":{"hy":"‘¥’´’¥’°÷Å’Ø’∏÷Ç’∂ ‚Ä¢ 40√ó60","ru":"–ü—Ä–æ—á–Ω—ã–π ‚Ä¢ 40√ó60","en":"Durable ‚Ä¢ 40√ó60"},
        "long":{
            "hy":"‚Ä¢ ‘Ω’´’ø ’∞’µ’∏÷Ç’Ω÷Ñ‚Ä¶\n‚Ä¢ ‘ø’∏’§’ù BA100817",
            "ru":"‚Ä¢ –ü–ª–æ—Ç–Ω–æ–µ –ø–ª–µ—Ç–µ–Ω–∏–µ‚Ä¶\n‚Ä¢ –ö–æ–¥: BA100817",
            "en":"‚Ä¢ Dense weave‚Ä¶\n‚Ä¢ Code: BA100817",
        },
        "price_new": 1690, "price_old": 3250,
        "best_seller": False, "stock": 14, "badges":["Eco"], "variants":["40√ó60"], "video": None,
        "images":[
            str(PRODUCT_IMG_DIR/"rugs"/"BA100817.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"advantages.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"interior.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"layers.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"absorb.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"care.jpg"),
        ],
    },

    "P020": {
        "code":"BA100818",
        "title":{"hy":"‘≥’∏÷Ä’£ ‚Ññ9","ru":"–ö–æ–≤—ë—Ä ‚Ññ9","en":"Carpet #9"},
        "short":{"hy":"’ï÷Ä’°’Ø’°’∂ ÷Ö’£’ø’°’£’∏÷Ä’Æ’∏÷Ç’¥ ‚Ä¢ 40√ó60","ru":"–ù–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Ä¢ 40√ó60","en":"Everyday use ‚Ä¢ 40√ó60"},
        "long":{
            "hy":"‚Ä¢ ’ï’∫’ø’´’¥’°’¨ ’∞’°’Ω’ø’∏÷Ç’©’µ’∏÷Ç’∂‚Ä¶\n‚Ä¢ ‘ø’∏’§’ù BA100818",
            "ru":"‚Ä¢ –û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è —Ç–æ–ª—â–∏–Ω–∞‚Ä¶\n‚Ä¢ –ö–æ–¥: BA100818",
            "en":"‚Ä¢ Optimal thickness‚Ä¶\n‚Ä¢ Code: BA100818",
        },
        "price_new": 1690, "price_old": 3250,
        "best_seller": False, "stock": 12, "badges":[], "variants":["40√ó60"], "video": None,
        "images":[
            str(PRODUCT_IMG_DIR/"rugs"/"BA100818.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"advantages.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"interior.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"layers.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"absorb.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"care.jpg"),
        ],
    },

    "P021": {
        "code":"BA100819",
        "title":{"hy":"‘≥’∏÷Ä’£ ‚Ññ10","ru":"–ö–æ–≤—ë—Ä ‚Ññ10","en":"Carpet #10"},
        "short":{"hy":"’è’∂’°’µ’´’∂ ’´’∂’ø’•÷Ä’´’•÷Ä ‚Ä¢ 40√ó60","ru":"–î–ª—è –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞ ‚Ä¢ 40√ó60","en":"Home interior ‚Ä¢ 40√ó60"},
        "long":{
            "hy":"‚Ä¢ ‘∫’°’¥’°’∂’°’Ø’°’Ø’´÷Å ’Ø’°’º’∏÷Ç÷Å’æ’°’Æ÷Ñ‚Ä¶\n‚Ä¢ ‘ø’∏’§’ù BA100819",
            "ru":"‚Ä¢ –°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞‚Ä¶\n‚Ä¢ –ö–æ–¥: BA100819",
            "en":"‚Ä¢ Modern construction‚Ä¶\n‚Ä¢ Code: BA100819",
        },
        "price_new": 1690, "price_old": 3250,
        "best_seller": False, "stock": 10, "badges":["Premium"], "variants":["40√ó60"], "video": None,
        "images":[
            str(PRODUCT_IMG_DIR/"rugs"/"BA100819.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"advantages.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"interior.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"layers.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"absorb.jpg"),
            str(PRODUCT_IMG_DIR/"shared"/"care.jpg"),
        ],
    },

    # --- Auto P002 (video + images) ---
    "P002": {
        "code": "AUTO-VAC01",
        "title": {"hy":"‘±’æ’ø’∏ ÷É’∏’∑’•’Ø’∏÷Ç’¨ ‚Ä¢ TurboClean","ru":"–ê–≤—Ç–æ-–ø—ã–ª–µ—Å–æ—Å ‚Ä¢ TurboClean","en":"Car Vacuum ‚Ä¢ TurboClean"},
        "short": {"hy":"’à÷Ç’™’•’≤ ÷Ñ’°’∑’∏’≤ ’∏÷Ç’™ ‚Ä¢ USB-C","ru":"–ú–æ—â–Ω–æ–µ –≤—Å–∞—Å—ã–≤–∞–Ω–∏–µ ‚Ä¢ USB-C","en":"Strong suction ‚Ä¢ USB-C"},
        "long": {
            "hy":"‚Ä¢ 120W ’∑’°÷Ä’™’´’π‚Ä¶\n‚Ä¢ ’é’•÷Ä’°’§’°÷Ä’±’ù 14 ÷Ö÷Ä ‚Ä¢ ‘ø’∏’§’ù AUTO-VAC01",
            "ru":"‚Ä¢ –ú–æ—Ç–æ—Ä 120W‚Ä¶\n‚Ä¢ –í–æ–∑–≤—Ä–∞—Ç 14 –¥–Ω–µ–π ‚Ä¢ –ö–æ–¥: AUTO-VAC01",
            "en":"‚Ä¢ 120W motor‚Ä¶\n‚Ä¢ 14-day returns ‚Ä¢ Code: AUTO-VAC01",
        },
        "price_new": 16900, "price_old": 19900,
        "best_seller": True, "stock": 34, "badges": ["Hot","Premium"],
        "variants": ["Black","White"],
        "video": str(PRODUCT_IMG_DIR/"car_cleaner"/"video.mp4"),
        "images": [
            str(PRODUCT_IMG_DIR/"car_cleaner"/"CAR001_1.jpg"),
            str(PRODUCT_IMG_DIR/"car_cleaner"/"CAR001_2.jpg"),
            str(PRODUCT_IMG_DIR/"car_cleaner"/"CAR001_3.jpg"),
            str(PRODUCT_IMG_DIR/"car_cleaner"/"CAR001_4.jpg"),
            str(PRODUCT_IMG_DIR/"car_cleaner"/"CAR001_5.jpg"),
        ],
    },

    # --- Women T-shirt P003 (sizes+colors) ---
    "P003": {
        "code": "wtsh-001",
        "title": {"hy":"‘ø’°’∂’°÷Å’´ ’∑’°’∫’´’Ø ‚Ä¢ Cotton Premium","ru":"–ñ–µ–Ω—Å–∫–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ ‚Ä¢ Cotton Premium","en":"Women T-Shirt ‚Ä¢ Cotton Premium"},
        "short": {"hy":"100% ’¢’°’¥’¢’°’Ø ‚Ä¢ S‚Äì3XL ‚Ä¢ 6 ’£’∏÷Ç’µ’∂","ru":"100% —Ö–ª–æ–ø–æ–∫ ‚Ä¢ S‚Äì3XL ‚Ä¢ 6 —Ü–≤–µ—Ç–æ–≤","en":"100% cotton ‚Ä¢ S‚Äì3XL ‚Ä¢ 6 colors"},
        "long": {
            "hy":"‚Ä¢ ‘≤’°÷Ä’±÷Ä’∏÷Ä’°’Ø 100% ’¢’°’¥’¢’°’Ø‚Ä¶\n‚Ä¢ ‘ø’∏’§’ù wtsh-001",
            "ru":"‚Ä¢ 100% —Ö–ª–æ–ø–æ–∫ –ø—Ä–µ–º–∏—É–º‚Ä¶\n‚Ä¢ –ö–æ–¥: wtsh-001",
            "en":"‚Ä¢ Premium 100% cotton‚Ä¶\n‚Ä¢ Code: wtsh-001",
        },
        "price_new": 7900, "price_old": 9500,
        "best_seller": True, "stock": 28, "badges": ["Premium"],
        "variants": ["S","M","L","XL","2XL","3XL","‚ö™Ô∏è","‚ö´Ô∏è","ü©∂","üü•","üü¶","üü©"],
        "video": None,
        "images": [
            str(PRODUCT_IMG_DIR/"women"/"wtsh-001_1.jpg"),
            str(PRODUCT_IMG_DIR/"women"/"wtsh-001_2.jpg"),
            str(PRODUCT_IMG_DIR/"women"/"wtsh-001_3.jpg"),
            str(PRODUCT_IMG_DIR/"women"/"wtsh-001_4.jpg"),
            str(PRODUCT_IMG_DIR/"women"/"wtsh-001_5.jpg"),
        ],
    },
}

# ---------- Fake Metrics (sold/likes/ratings) ----------
_SOLD   : Dict[str, int] = {}
_LIKES  : Dict[str, int] = {}
_RATING : Dict[str, Tuple[int,int]] = {}  # pid -> (sum_stars, count)

def _init_metrics(pid: str):
    if pid not in _SOLD:
        _SOLD[pid] = random.randint(120, 380)
    if pid not in _LIKES:
        _LIKES[pid] = random.randint(30, 150)
    if pid not in _RATING:
        _RATING[pid] = (random.randint(15, 25)*4, random.randint(4, 6))  # sum,count

# ---------- Public API ----------
def categories(lang: str) -> List[Tuple[str,str]]:
    return _CATEGORIES.get(lang, _CATEGORIES["hy"])

def subcategories(lang: str, cat_id: str) -> List[Tuple[str,str]]:
    ids = _SUBCATS.get(cat_id, [])
    out = []
    for sid in ids:
        title = _SUBCAT_TITLES.get(lang, _SUBCAT_TITLES["hy"]).get((cat_id, sid))
        if title:
            out.append((sid, title))
    return out

def products(lang: str, cat_id: str, sub_id: str) -> List[Tuple[str,str]]:
    ids = _PROD_INDEX.get((cat_id, sub_id), [])
    out = []
    for pid in ids:
        p = PRODUCTS.get(pid, {})
        title = p.get("title", {}).get(lang) or p.get("title", {}).get("hy") or pid
        out.append((pid, title))
    return out

def product_data(pid: str, lang: str) -> Optional[Dict]:
    p = PRODUCTS.get(pid)
    if not p: return None
    _init_metrics(pid)
    return {
        "pid": pid,
        "code": p["code"],
        "title": p["title"].get(lang) or p["title"]["hy"],
        "short": p["short"].get(lang) or p["short"]["hy"],
        "long":  p["long"].get(lang)  or p["long"]["hy"],
        "price_new": p["price_new"],
        "price_old": p["price_old"],
        "best_seller": p["best_seller"],
        "stock": p["stock"],
        "badges": p.get("badges", []),
        "variants": p.get("variants", []),
        "video": p.get("video"),
        "images": p.get("images", []),
        "sold": _SOLD[pid],
        "likes": _LIKES[pid],
        "rating_avg": (_RATING[pid][0] / max(1,_RATING[pid][1])),
        "rating_count": _RATING[pid][1],
    }

def _discount_percent(p_old: int, p_new: int) -> int:
    if not p_old or p_old <= p_new: return 0
    return int(round((p_old - p_new) * 100.0 / p_old))

def product_caption(pid: str, lang: str) -> str:
    p = product_data(pid, lang)
    if not p: return ""
    disc = _discount_percent(p["price_old"], p["price_new"])
    badges = " ‚Ä¢ ".join(p["badges"]) if p["badges"] else ""
    avg = p["rating_avg"]
    stars = "‚≠ê" * int(round(min(5, max(1, avg))))
    texts = {
        "hy": (
            f"*{p['title']}*  \n"
            f"üè∑Ô∏è ‘ø’∏’§’ù {p['code']}\n"
            f"‚úîÔ∏è {p['short']}\n"
            f"‚ùå ’Ä’´’∂ ’£’´’∂’ù {p['price_old']:,}÷è  |  ‚úÖ ’Ü’∏÷Ä’ù *{p['price_new']:,}÷è*  ({disc}%)\n"
            f"üìä ’é’°’≥’°’º’æ’°’Æ’ù {p['sold']} ‚Ä¢ ‚ù§Ô∏è {p['likes']} ‚Ä¢ {stars} ({p['rating_count']})\n"
            f"{'üèÖ ' + badges if badges else ''}"
        ),
        "ru": (
            f"*{p['title']}*  \n"
            f"üè∑Ô∏è –ö–æ–¥: {p['code']}\n"
            f"‚úîÔ∏è {p['short']}\n"
            f"‚ùå –°—Ç–∞—Ä–∞—è: {p['price_old']:,}÷è  |  ‚úÖ –ù–æ–≤–∞—è: *{p['price_new']:,}÷è*  ({disc}%)\n"
            f"üìä –ü—Ä–æ–¥–∞–Ω–æ: {p['sold']} ‚Ä¢ ‚ù§Ô∏è {p['likes']} ‚Ä¢ {stars} ({p['rating_count']})\n"
            f"{'üèÖ ' + badges if badges else ''}"
        ),
        "en": (
            f"*{p['title']}*  \n"
            f"üè∑Ô∏è Code: {p['code']}\n"
            f"‚úîÔ∏è {p['short']}\n"
            f"‚ùå Old: {p['price_old']:,}÷è  |  ‚úÖ New: *{p['price_new']:,}÷è*  ({disc}%)\n"
            f"üìä Sold: {p['sold']} ‚Ä¢ ‚ù§Ô∏è {p['likes']} ‚Ä¢ {stars} ({p['rating_count']})\n"
            f"{'üèÖ ' + badges if badges else ''}"
        ),
    }
    return texts.get(lang, texts["hy"])

def product_long(pid: str, lang: str) -> str:
    p = PRODUCTS.get(pid)
    if not p: return ""
    return p["long"].get(lang) or p["long"]["hy"]

def gallery_len(pid: str) -> int:
    p = PRODUCTS.get(pid, {})
    imgs = p.get("images", []) or []
    vid  = p.get("video")
    return len(imgs) + (1 if vid else 0)

def slide_info(pid: str, idx: int) -> Tuple[str, str]:
    p = PRODUCTS.get(pid, {})
    vid = p.get("video")
    imgs = p.get("images", []) or []
    if vid:
        if idx == 0:
            return "video", vid
        return "image", imgs[(idx-1) % max(1, len(imgs))] if imgs else ("image","")
    return "image", imgs[idx % max(1, len(imgs))] if imgs else ("image","")

def inc_sales(pid: str, best_seller: bool=False):
    _init_metrics(pid)
    bump = random.randint(10, 100) + (2 if best_seller else 0)
    _SOLD[pid] += bump
    if pid in PRODUCTS:
        PRODUCTS[pid]["stock"] = max(0, PRODUCTS[pid]["stock"] - max(0, bump // 50))

def inc_like(pid: str):
    _init_metrics(pid)
    _LIKES[pid] += 1

def rate(pid: str, stars: int):
    _init_metrics(pid)
    stars = max(1, min(5, int(stars)))
    s, c = _RATING[pid]
    _RATING[pid] = (s + stars, c + 1)
def get_product(pid: str, lang: str) -> Optional[Dict]:
    """’ä’°÷Ä’¶ ’∞’°÷Ä’¥’°÷Ä’•÷Å’æ’°’Æ view’ù Cart/Checkout PU-’•÷Ä’´ ’∞’°’¥’°÷Ä."""
    p = PRODUCTS.get(pid)
    if not p:
        return None
    title = p["title"].get(lang) or p["title"]["hy"]
    imgs = p.get("images") or []
    return {
        "sku": pid,
        "name": title,
        "price": float(p.get("price_new", 0)),
        "thumb": imgs[0] if imgs else None,
    }
